testing <- read.table("~/Documents/PVDM_office/yeekeh/testing.xlsx", header=TRUE, quote="\"")
View(testing)
library(readxl)
testing <- read_excel("testing.xlsx")
View(testing)
head(testing)
testing <- read.table("~/Documents/PVDM_office/yeekeh/testing.xlsx", header=TRUE, quote="\"")
head(testing)
View(testing)
testing <- read.table("~/Documents/PVDM_office/yeekeh/testing.xlsx", header=TRUE, quote="\"")
View(testing)
testing <- read.table("~/Documents/PVDM_office/yeekeh/testing.xlsx", header=TRUE, quote="\"")
View(testing)
View(testing)
testing <- read.table("~/Documents/PVDM_office/yeekeh/testing.xlsx", header=TRUE, quote="\"")
library(readxl)
testing <- read_excel("testing.xlsx")
View(testing)
testing <- read_excel("testing.xlsx")
head(testing)
#setup the environment: install related packages
#install.packages("dplyr")
#install.packages("PerformanceAnalytics") #not available for R version 3.4.3
#install.packages("ggplot2")
#install.packages("tidyverse")
#install.packages("stringr")
#install.packages("naniar")
library(dplyr)
#library(PerformanceAnalytics)
library(ggplot2)
library(stringr)
library(naniar)
clean
clean <- testing %>%
mutate(trialnum = trial)
head(clean)
clean <- testing %>%
mutate(real_trial = ifelse(trial == NaN, 1, trial +1), end_trial = 50*(block-1) +real_trial)
clean <- testing %>%
mutate(real_trial = ifelse(trial == NaN, 1, as.numeric(trial) +1), end_trial = 50*(as.numeric(block)-1) +real_trial)
head(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1), end_trial = 50*(as.numeric(block)-1) +real_trial)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1), end_trial = ifelse(block <2.5, real_trial, real_trial+100))
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1), end_trial = ifelse(block <2.5, real_trial, real_trial+(block-2)*50))
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1), end_trial = ifelse(block <2.5, real_trial, real_trial+(as.numeric(block)-2)*50))
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1), end_trial = ifelse(block <1.5, real_trial, real_trial+(as.numeric(block)-2)*50))
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1),
end_trial = ifelse((as.numeric(block) %% 2) == 0, real_trial + 100, real_trial)
)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1),
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 3.5), real_trial + 50, real_trial+100)
)
clean <- testing %>%
mutate(real_trial = ifelse(is.na(trial), 1, as.numeric(trial) +1),
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 3.5, real_trial + 50, real_trial+100))
)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(!is.na(trial), as.numeric(trial) +1, ifelse(block < 2.5, 1, 51)),  #depends on block num too
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 3.5, real_trial + 50, real_trial+100))
)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(!is.na(trial), as.numeric(trial) +1, ifelse(block < 2.5, 1, 51)),  #depends on block num too
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 3.5, real_trial + 51, real_trial+102))
)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(!is.na(trial), as.numeric(trial) +1, ifelse(block < 2.5, 1, 51)),  #depends on block num too
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 3.5, real_trial + 51, real_trial+103))
)
View(clean)
clean <- testing %>%
mutate(real_trial = ifelse(!is.na(trial), as.numeric(trial) +1, ifelse(block < 2.5, 1, 51)),  #depends on block num too
end_trial = ifelse(block < 1.5, real_trial, ifelse(block < 2.5, real_trial + 51, ifelse(block < 3.5, real_trial + 52, real_trial+103)))
)
View(clean)
clean <- testing %>%
mutate(sep_trial =
ifelse(!is.na(trial), as.numeric(trial) +1,
ifelse(block < 2.5, 1, 51)),  #depends on block num too
real_trial =
ifelse(block < 1.5, sep_trial,
ifelse(block < 2.5, sep_trial + 51,
ifelse(block < 3.5, sep_trial + 52, sep_trial+103)))
)
View(clean)
clean <- testing %>%
mutate(sep_trial =
ifelse(!is.na(trial), as.numeric(trial) +1,
ifelse(block < 2.5, 1, 51)),  #depends on block num too
real_trial =
ifelse(block < 1.5, sep_trial,
ifelse(block < 2.5, sep_trial + 51,
ifelse(block < 3.5, sep_trial + 52, sep_trial+103)))
) %>%
select(sub, block, Btype, real_trial, img1, img2, RESP, RT)
View(clean)
